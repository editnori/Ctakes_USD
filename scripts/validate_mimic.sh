#!/usr/bin/env bash\nset -euo pipefail\n\nBASE_DIR="$(cd "$(dirname "$0")/.." && pwd)"\nDEFAULT_INPUT="${BASE_DIR}/samples/mimic"\nDEFAULT_OUTPUT="${BASE_DIR}/outputs/validate_mimic"\nDEFAULT_MANIFEST_BASE="${BASE_DIR}/samples/mimic_manifest"\nDEFAULT_MANIFEST="${DEFAULT_MANIFEST_BASE}.json"\n\nENV_FILE="${BASE_DIR}/.ctakes_env"\nif [[ -f "${ENV_FILE}" ]]; then\n  # shellcheck disable=SC1090\n  source "${ENV_FILE}"\nfi\n\n\nVALIDATE_SCRIPT="${BASE_DIR}/scripts/validate.sh"\nif [[ ! -f "${VALIDATE_SCRIPT}" ]]; then\n  echo "[validate_mimic] Missing validate.sh helper" >&2\n  exit 1\nfi\n\nVALIDATE_CMD=("${BASH:-bash}" "${VALIDATE_SCRIPT}")\n\nusage() {\n  cat <<'USAGE'\nUsage: scripts/validate_mimic.sh [options]\nOptions:\n  -i, --input <dir>    Source notes directory (default: samples/mimic)\n  -o, --output <dir>   Output directory (default: outputs/validate_mimic)\n  --limit <N>          Override sample size (default: 100)\n  --pipeline <core_sectioned_smoke|s_core_relations_smoke>     Combined pipeline variant (default: s_core_relations_smoke)\n  --with-relations    (ignored) Combined pipeline already includes relations\n  --manifest <file>    Override manifest path (default: samples/mimic_manifest.json)\n  --dry-run            Print the commands without executing\n  -h, --help           Show this help text\n\nRuns scripts/validate.sh with defaults suited for an optional 100-note sample pack (drop your notes under samples/mimic).\nUSAGE\n}\n\nIN_DIR="${DEFAULT_INPUT}"\nOUT_DIR="${DEFAULT_OUTPUT}"\nLIMIT=100\nPIPELINE_KEY="s_core_relations_smoke"\nPIPELINE_SET=0\nPIPELINE_RUNS=()\nWITH_RELATIONS=0\nDRY_RUN=0\nMANIFEST="${DEFAULT_MANIFEST}"\nMANIFEST_PROVIDED=0\n\nwhile [[ $# -gt 0 ]]; do\n  case "$1" in\n    -i|--input) IN_DIR="$2"; shift 2;;\n    -o|--output) OUT_DIR="$2"; shift 2;;\n    --limit) LIMIT="$2"; shift 2;;\n    --pipeline) PIPELINE_KEY="$2"; PIPELINE_SET=1; PIPELINE_RUNS=("${PIPELINE_KEY}"); shift 2;;\n    --with-relations)\n      echo "[validate_mimic] --with-relations is implied for combined pipelines; ignoring." >&2\n      shift 1;;\n    --manifest) MANIFEST="$2"; MANIFEST_PROVIDED=1; shift 2;;\n    --dry-run) DRY_RUN=1; shift 1;;\n    -h|--help) usage; exit 0;;\n    *) echo "Unknown option: $1" >&2; usage >&2; exit 1;;\n  esac\n\ndone\n\ncase "${PIPELINE_KEY}" in\n  core_sectioned_smoke|s_core_relations_smoke)\n    ;;\n  *)\n    echo "[validate_mimic] Pipeline '${PIPELINE_KEY}' is no longer supported; using s_core_relations_smoke." >&2\n    PIPELINE_KEY="s_core_relations_smoke"\n    ;;\nesac\n\nPIPELINE_RUNS=("${PIPELINE_KEY}")\n\n\n\n\n\nif [[ ! -d "${IN_DIR}" ]]; then\n  echo "[validate_mimic] Input directory not found: ${IN_DIR}" >&2\n  echo "Copy sample notes into ${IN_DIR} (or provide an --input pack) before running." >&2\n  exit 1\nfi\n\nmkdir -p "${OUT_DIR}"\n\nSTATUS=0\nfor pipeline in "${PIPELINE_RUNS[@]}"; do\n  OUT_DIR_PIPE="${OUT_DIR%/}/${pipeline}"\n  mkdir -p "${OUT_DIR_PIPE}"\n  MANIFEST_USE="${MANIFEST}"\n  if [[ ${MANIFEST_PROVIDED} -eq 0 ]]; then\n    MANIFEST_USE="${DEFAULT_MANIFEST_BASE}_${pipeline}.json"\n  fi\n  CMD=("${VALIDATE_CMD[@]}" -i "${IN_DIR}" -o "${OUT_DIR_PIPE}" --pipeline "${pipeline}" --limit "${LIMIT}" --manifest "${MANIFEST_USE}")\n  [[ ${DRY_RUN} -eq 1 ]] && CMD+=(--dry-run)\n  echo "[validate_mimic] Running ${pipeline} pipeline -> ${OUT_DIR_PIPE}"\n  if ! "${CMD[0]}" "${CMD[@]:1}"; then\n    STATUS=1\n  fi\ndone\n\nexit ${STATUS}\n
